# fr / findref

<% require_relative 'erb_helpers' %>

findref is

## Installing

If you wish, you can download prebuilt binaries for your system.  After downloading,
put it somewhere in your PATH.  I recommend /usr/local/bin:

Current Release Version: <%= fr_version %>

| Release | Linux                     | macOS | Windows |
|:-------:|:-------------------------:|:-------------:|:-------------:|
<%= ErbHelpers.release_line(ErbHelpers.latest_release) %>

### Older releases

The full catalog of releases is available to download.  See [ARCHIVES.md](ARCHIVES.md)

### Building from source

To build from source you can either use the docker build wrapper, or build it directly on your system.

If you have your [Go environment](https://golang.org/doc/install) set up
already, you can build it directly from source:

```bash
go get github.com/FreedomBen/findref
go install findref
```

To use the docker build, the easiest way is to use the rake task:

```bash
rake
```

Pretty easy, tho that will build for every supported platform.  You can also build for just
your platform.  Specify your OS for the `GOOS` value, and your arch for `GOARCH`.  See [here
for a list of valid targets](https://stackoverflow.com/a/30068222/2062384).

Example for Linux x64 (amd64):

```bash
    docker run \
      --rm \
      --volume "$(pwd):/usr/src/findref" \
      --workdir "/usr/src/findref" \
      --env GOOS=linux \
      --env GOARCH=amd64 \
      golang:#{GO_VERSION} go build
```

Example for Linux x32 (386):

```bash
    docker run \
      --rm \
      --volume "$(pwd):/usr/src/findref" \
      --workdir "/usr/src/findref" \
      --env GOOS=linux \
      --env GOARCH=386 \
      golang:#{GO_VERSION} go build
```

Example for macOS x64 (amd64)

```bash
    docker run \
      --rm \
      --volume "$(pwd):/usr/src/findref" \
      --workdir "/usr/src/findref" \
      --env GOOS=darwin \
      --env GOARCH=amd64 \
      golang:#{GO_VERSION} go build
```
